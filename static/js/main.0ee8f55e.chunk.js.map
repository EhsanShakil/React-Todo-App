{"version":3,"sources":["Components/todoList/todoList.js","Components/todoApp/todoApp.js","app.js","index.js"],"names":["TodoList","props","className","inputText","map","item","index","key","text","onClick","deleteHandler","TodoApp","state","handleChange","bind","handleSubmit","handleDelete","e","this","setState","target","value","preventDefault","length","newItem","concat","Delete","finalText","filter","input","onSubmit","id","onChange","Component","App","ReactDOM","render","document","getElementById"],"mappings":"0OAuBeA,G,MApBE,SAAAC,GACf,OACE,6BACE,wBAAIC,UAAU,YACXD,EAAME,UAAUC,KAAI,SAACC,EAAMC,GAAP,OACnB,wBAAIC,IAAKD,GACND,EAAKG,KACN,4BACEN,UAAU,iBACVO,QAAS,kBAAMR,EAAMS,cAAcL,KAFrC,kBCyDGM,G,kBA9Db,WAAYV,GAAQ,IAAD,8BACjB,4CAAMA,KAEDW,MAAQ,CACXT,UAAW,GACXK,KAAM,IAGR,EAAKK,aAAe,EAAKA,aAAaC,KAAlB,gBAEpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAEpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAZH,E,0EAeNG,GACXC,KAAKC,SAAS,CAAEX,KAAMS,EAAEG,OAAOC,U,mCAGpBJ,GAEX,GADAA,EAAEK,iBAC6B,IAA3BJ,KAAKN,MAAMJ,KAAKe,OAApB,CAGA,IAAMC,EAAU,CACdhB,KAAMU,KAAKN,MAAMJ,MAEnBU,KAAKC,UAAS,SAAAP,GAAK,MAAK,CACtBT,UAAWS,EAAMT,UAAUsB,OAAOD,GAClChB,KAAM,U,mCAIGkB,GAAS,IAEdC,EADgBT,KAAKN,MAAnBT,UACoByB,QAAO,SAAAC,GAAK,OAAIA,IAAUH,KACtDR,KAAKC,SAAS,CAAEhB,UAAWwB,M,+BAI3B,OACE,6BACE,wBAAIzB,UAAU,WAAd,kBAEA,0BAAMA,UAAU,OAAO4B,SAAUZ,KAAKH,cACpC,2BACEb,UAAU,QACV6B,GAAG,OACHC,SAAUd,KAAKL,aACfQ,MAAOH,KAAKN,MAAMJ,OAEpB,4BAAQN,UAAU,iBAAlB,aAEF,kBAAC,EAAD,CACEC,UAAWe,KAAKN,MAAMT,UACtBO,cAAeQ,KAAKF,oB,GAxDRiB,cCOPC,EARH,WACV,OACE,6BACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0ee8f55e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./todoList.css\";\n\nconst TodoList = props => {\n  return (\n    <div>\n      <ol className=\"todoList\">\n        {props.inputText.map((item, index) => (\n          <li key={index}>\n            {item.text}\n            <button\n              className=\"todoListButton\"\n              onClick={() => props.deleteHandler(item)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport TodoList from \"../todoList/todoList\";\nimport \"./todoApp.css\";\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      inputText: [],\n      text: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.text.length === 0) {\n      return;\n    }\n    const newItem = {\n      text: this.state.text\n    };\n    this.setState(state => ({\n      inputText: state.inputText.concat(newItem),\n      text: \"\"\n    }));\n  }\n\n  handleDelete(Delete) {\n    const { inputText } = this.state;\n    const finalText = inputText.filter(input => input !== Delete);\n    this.setState({ inputText: finalText });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"heading\">React Todo App</h1>\n\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <input\n            className=\"input\"\n            id=\"text\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <button className=\"todoAppButton\">Add Todo</button>\n        </form>\n        <TodoList\n          inputText={this.state.inputText}\n          deleteHandler={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from \"react\";\nimport TodoApp from \"./Components/todoApp/todoApp\";\n\nconst App = () => {\n  return (\n    <div>\n      <TodoApp />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}